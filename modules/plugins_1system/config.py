from pyrogram import Client, filters, types
from modules.plugins_1system.settings.main_settings import module_list, file_list, Config
from time import *

import json
import modules.plugins_1system.settings.main_settings 

def totext(text: str):
    return text.replace(f'{Config.prefix}{moduleName}', '')

def count(dict):
    i = 0
    for j in dict:
        i += 1

    return i

moduleName = 'config'  
@Client.on_message(filters.command(moduleName, prefixes=Config.prefix) & (Config.cmdrights == "all" and filters.all or filters.me ))
async def config(client: Client, message: types.Message):
    modulesd = ""
    Config.botmessages.append(message)
    async def links():
        if message.text.split()[2] == "off":
            Config.setlinks("False")
            await message.edit(f"‚úÖ <b>–°—Å—ã–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —é–∑–µ—Ä–±–æ—Ç–æ–º –±—É–¥—É—Ç —Å–∫—Ä—ã–≤–∞—Ç—å—Å—è</b>")
            Config.restart_userbot()
        else:
            Config.setlinks("True")
            await message.edit(f"‚úÖ <b>–°—Å—ã–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —é–∑–µ—Ä–±–æ—Ç–æ–º –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è</b>")
            Config.restart_userbot()

        
    async def cmd():
        if message.text.split()[2] == "all":
            Config.setcmd("all")
            await message.edit(f"‚úÖ <b>–í—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã —Ç–µ–ø–µ—Ä—å –º–æ–≥—É—Ç –≤—Å–µ</b>")
            Config.restart_userbot()
        else:
            Config.setcmd("me")
            await message.edit(f"‚úÖ <b>–í—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã</b>")
            Config.restart_userbot()

    async def reputation():
        if message.text.split()[2] == "off":
            Config.setrep("False")
            await message.edit(f"‚úÖ <b>–†–µ–∂–∏–º —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –≤—ã–∫–ª—é—á–µ–Ω</b>")
            Config.restart_userbot()
        else:
            Config.setrep("True")
            await message.edit(f"‚úÖ <b>–†–µ–∂–∏–º —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω</b>")
            Config.restart_userbot()
    
    async def prefix():
            Config.setprefix(message.text.split()[2])
            await message.edit(f"‚úÖ <b>–ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {message.text.split()[2]}</b>")
            Config.restart_userbot()

    async def reset():
            await message.edit(f"‚öôÔ∏è <b>–°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫...</b>")
            Config.setprefix(".")
            Config.setrep("False")
            Config.setlinks("False")
            await message.edit(f"‚úÖ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã!</b>")
            Config.restart_userbot()

    setf = {
        "links": links,
        "prefix": prefix,
        "reset": reset,
        "reputation": reputation,

    }
    if count(message.text.split()) == 1:
        for i in module_list:
            if file_list[i].endswith("C.py"):
                modulesd = modulesd + f"\n‚¨õ {i} | {module_list[i]} | –ü–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –º–æ–¥—É–ª—å"
            else:
                modulesd = modulesd + f"\nüü© {i} | {module_list[i]} | –°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–¥—É–ª—å"
        await message.edit(f"""
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>
                           
<b>–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏</b>: 
                    <code>{modulesd}</code>

<b>–ü—Ä–µ—Ñ–∏–∫—Å</b>: <code>{Config.prefix}</code>

<b>–ü–æ–∫–∞–∑—ã–≤–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫</b>: <code>{Config.showlinks == "True" and "–í–∫–ª—é—á–µ–Ω–æ" or "–í—ã–∫–ª—é—á–µ–Ω–æ"}</code>

<b>–†–µ–∂–∏–º —Ä–µ–ø—É—Ç–∞—Ü–∏–∏</b>: <code>{Config.reputation == "True" and "–í–∫–ª—é—á–µ–Ω" or "–í—ã–∫–ª—é—á–µ–Ω"}</code>

    """)
    else:
            if setf.get(message.text.split()[1]):
                await setf.get(message.text.split()[1])()
            else:
                await message.edit("‚ùå <b>–§—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</b>")
module_list['Config'] = f'{Config.prefix}{moduleName} [index] [value]'
file_list['Config'] = f'{moduleName}.py'
