from pyrogram import Client, filters, types, enums
from modules.plugins_1system.settings.main_settings import module_list, file_list, Config
from time import *
from glob import glob

import json
import os
import requests
import modules.plugins_1system.settings.main_settings 

def totext(text: str):
    return text.replace(f'{Config.prefix}{moduleName}', '')

def count(dict):
    i = 0
    for j in dict:
        i += 1

    return i

moduleName = 'rmmod'

@Client.on_message(filters.command(moduleName, prefixes=Config.prefix) & (Config.cmdrights == "all" and filters.all or filters.me ))
async def rmmod(client: Client, message: types.Message):
    await message.edit(f"üåê <b>–ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è...</b>")
    module = requests.get(message.text.split()[1])
    if module:
        await message.edit(f"‚öôÔ∏è <b>–£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è...</b>")
        custommodules = glob("modules/plugins_2custom/*C.py")
        for i in custommodules:
            if open(i, "r").read() == module.text and i.endswith("C.py"):
                os.remove(i) 
                await message.edit(f"‚úÖ <b>–ú–æ–¥—É–ª—å –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!</b>")
                Config.restart_userbot()
                break
            else:
                await message.edit(f"‚ùå <b>–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–¥—É–ª—å!</b>")
    


    print(module)
    #await message.edit(f"‚úÖ <b>–ß–∞—Ç –±—ã–ª –æ—á–∏—â–µ–Ω –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —é–∑–µ—Ä–±–æ—Ç–∞</b>")

module_list['Remove Module'] = f'{Config.prefix}{moduleName} [ raw source link ]'
file_list['Remove Module'] = f'{moduleName}.py'
